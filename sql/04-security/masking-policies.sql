-- Create masking policies
CREATE MASKING POLICY SIN_MASK AS (val STRING) RETURNS STRING ->
    CASE 
        WHEN CURRENT_ROLE() IN ('COMPLIANCE_OFFICER') THEN val
        ELSE 'XXX-XXX-' || RIGHT(val, 3)
    END;

CREATE MASKING POLICY EMAIL_MASK AS (val STRING) RETURNS STRING ->
    CASE 
        WHEN CURRENT_ROLE() IN ('COMPLIANCE_OFFICER') THEN val
        ELSE REGEXP_REPLACE(val, '^(.{2}).*(@.*)$', '\\1****\\2')
    END;

-- Apply masking policies to staging data
ALTER TABLE BANKING_STAGING.STG_CUSTOMER.CUSTOMER_PROFILES_STG 
    MODIFY COLUMN sin SET MASKING POLICY SIN_MASK;

ALTER TABLE BANKING_STAGING.STG_CUSTOMER.CUSTOMER_PROFILES_STG 
    MODIFY COLUMN email SET MASKING POLICY EMAIL_MASK;

-- Apply masking policies to raw data
ALTER TABLE BANKING_raw.customer_data.customer_profiles
    MODIFY COLUMN sin SET MASKING POLICY SIN_MASK;

ALTER TABLE BANKING_raw.customer_data.customer_profiles
    MODIFY COLUMN email SET MASKING POLICY EMAIL_MASK;